package com.mycompany.banco.view;

import auxiliar.ArquivoJson;
import static auxiliar.ArquivoJson.buscarUsuarioPorCPF;
import static auxiliar.ArquivoJson.removerPedidoSaque;
import static auxiliar.ArquivoJson.removerSolicitacaoCredito;
import static auxiliar.Verifica.emprestimo;
import static auxiliar.Verifica.saque;

import java.awt.Toolkit;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import usuario.Usuario;

// Aluno Caio Louback  matrícula 202335032
public class MenuGerente extends javax.swing.JFrame {
    private String cpfGerente;
    
    public MenuGerente(String cpfGerente) {
        initComponents();
        setIcon();
        this.cpfGerente = cpfGerente;
    }
    
    public MenuGerente(){
        initComponents();
    }
    
    private void atualizarTabela() {
        // Obtém as solicitações de crédito e atualiza a tabela
        List<Map<String, Object>> solicitacoesCredito = ArquivoJson.lerSolicitacaoCredito();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Nome");
        model.addColumn("CPF");
        model.addColumn("Valor");

        // Preenche a tabela com os dados atualizados
        for (Map<String, Object> solicitacao : solicitacoesCredito) {
            String nome = (String) solicitacao.get("nome");
            String cpf = (String) solicitacao.get("cpf");
            double valor = (double) solicitacao.get("valor");
            model.addRow(new Object[]{nome, cpf, valor});
        }

        tbTabelaCredito.setModel(model);
    }
    
    private void atualizarTabela2() {
        // Obtém as solicitações de crédito e atualiza a tabela
        List<Map<String, Object>> solicitacoesCredito = ArquivoJson.lerSolicitacaoCredito();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Nome");
        model.addColumn("CPF");
        model.addColumn("Valor");

        // Preenche a tabela com os dados atualizados
        for (Map<String, Object> solicitacao : solicitacoesCredito) {
            String nome = (String) solicitacao.get("nome");
            String cpf = (String) solicitacao.get("cpf");
            double valor = (double) solicitacao.get("valor");
            model.addRow(new Object[]{nome, cpf, valor});
        }

        tbTabelaSaque.setModel(model);
    }
    
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon.png")));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblGerente = new javax.swing.JLabel();
        lblNomeGerente = new javax.swing.JLabel();
        Painel = new javax.swing.JPanel();
        lblTituloPequeno = new javax.swing.JLabel();
        btnVerificar = new javax.swing.JButton();
        btnAprovar = new javax.swing.JButton();
        btnReprovar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTabelaCredito = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblLogoBanco = new javax.swing.JLabel();
        lblClick = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbTabelaSaque = new javax.swing.JTable();
        lblTituloPequeno1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        MenuInvestimentos = new javax.swing.JMenu();
        MenuCadastros = new javax.swing.JMenu();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerente");
        setResizable(false);

        lblGerente.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblGerente.setText("Gerente:");

        lblNomeGerente.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        lblNomeGerente.setText("Nome ");
        lblNomeGerente.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblNomeGerenteAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Painel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTituloPequeno.setText("Verifique se há solicitações de crédito: ");

        btnVerificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verificar.png"))); // NOI18N
        btnVerificar.setText("Verificar");
        btnVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarActionPerformed(evt);
            }
        });

        btnAprovar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aprovado.png"))); // NOI18N
        btnAprovar.setText("Aprovar");
        btnAprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprovarActionPerformed(evt);
            }
        });

        btnReprovar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/negado.png"))); // NOI18N
        btnReprovar.setText("Reprovar");
        btnReprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReprovarActionPerformed(evt);
            }
        });

        tbTabelaCredito = new javax.swing.JTable(){
            public boolean isCellEditable(int   rowIndex, int colIndex){
                return false;
            }
        };
        tbTabelaCredito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTabelaCredito.setFocusable(false);
        tbTabelaCredito.getTableHeader().setResizingAllowed(false);
        tbTabelaCredito.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbTabelaCredito);

        javax.swing.GroupLayout PainelLayout = new javax.swing.GroupLayout(Painel);
        Painel.setLayout(PainelLayout);
        PainelLayout.setHorizontalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnVerificar)
                        .addGap(54, 54, 54)
                        .addComponent(btnAprovar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReprovar))
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(lblTituloPequeno))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        PainelLayout.setVerticalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTituloPequeno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVerificar)
                    .addComponent(btnAprovar)
                    .addComponent(btnReprovar))
                .addGap(19, 19, 19))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblLogoBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logobanco.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLogoBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogoBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblClick.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblClick.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sair.png"))); // NOI18N
        lblClick.setText("Deslogar");
        lblClick.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblClick.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblClickMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbTabelaSaque = new javax.swing.JTable(){
            public boolean isCellEditable(int   rowIndex, int colIndex){
                return false;
            }
        };
        tbTabelaSaque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTabelaSaque.setFocusable(false);
        tbTabelaSaque.getTableHeader().setResizingAllowed(false);
        tbTabelaSaque.getTableHeader().setReorderingAllowed(false);
        tbTabelaSaque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTabelaSaqueMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbTabelaSaque);

        lblTituloPequeno1.setText("Verifique se há solicitações de saque de altos valores:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verificar.png"))); // NOI18N
        jButton1.setText("Verificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aprovado.png"))); // NOI18N
        jButton2.setText("Liberar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(lblTituloPequeno1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblTituloPequeno1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuInvestimentos.setText("Investimentos");
        MenuBar.add(MenuInvestimentos);

        MenuCadastros.setText("Cadastros");
        MenuBar.add(MenuCadastros);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(191, 191, 191)
                                .addComponent(lblClick))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(lblGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNomeGerente)))
                .addGap(23, 23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeGerente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblClick)
                        .addGap(16, 16, 16)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Painel, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblNomeGerenteAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblNomeGerenteAncestorAdded
        Usuario user = buscarUsuarioPorCPF(cpfGerente);
        lblNomeGerente.setText(user.getNome());
    }//GEN-LAST:event_lblNomeGerenteAncestorAdded

    private void btnVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarActionPerformed

        List<Map<String, Object>> solicitacoesCredito = ArquivoJson.lerSolicitacaoCredito();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Nome");
        model.addColumn("CPF");
        model.addColumn("Valor");
        
        for (Map<String, Object> solicitacao : solicitacoesCredito) {
            String nome = (String) solicitacao.get("nome");
            String cpf = (String) solicitacao.get("cpf");
            double valor = (double) solicitacao.get("valor");
            model.addRow(new Object[]{nome, cpf, valor});
        }

        tbTabelaCredito.setModel(model);
    }//GEN-LAST:event_btnVerificarActionPerformed

    private void btnAprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprovarActionPerformed
        // Obtém o índice da linha selecionada
        int selectedRow = tbTabelaCredito.getSelectedRow();

        // Verifica se há uma linha selecionada
        if (selectedRow != -1) {
            // Pega os valores da linha selecionada
          
            String cpf = (String) tbTabelaCredito.getValueAt(selectedRow, 1);  // CPF está na coluna 1
            double valor = (double) tbTabelaCredito.getValueAt(selectedRow, 2); // Valor está na coluna 2

            // Aqui você pode chamar o método para realizar a transferência
            emprestimo(cpf, valor);
            
            removerSolicitacaoCredito(cpf, valor);
            JOptionPane.showMessageDialog(this, "Solicitacão aceita!", "Aprovado!", JOptionPane.INFORMATION_MESSAGE);
            atualizarTabela();
            
        } else {
            // Caso não tenha linha selecionada
            JOptionPane.showMessageDialog(this, "Por favor, selecione uma linha!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAprovarActionPerformed

    private void btnReprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReprovarActionPerformed
        // Obtém o índice da linha selecionada
        int selectedRow = tbTabelaCredito.getSelectedRow();

        // Verifica se há uma linha selecionada
        if (selectedRow != -1) { // Pega os valores da linha selecionada
         
            String cpf = (String) tbTabelaCredito.getValueAt(selectedRow, 1);  // CPF está na coluna 1
            double valor = (double) tbTabelaCredito.getValueAt(selectedRow, 2); // Valor está na coluna 2

            removerSolicitacaoCredito(cpf, valor);
            JOptionPane.showMessageDialog(this, "Solicitacão negada!", "Negado!", JOptionPane.INFORMATION_MESSAGE);
            atualizarTabela();
        } else {
            // Caso não tenha linha selecionada
            JOptionPane.showMessageDialog(this, "Por favor, selecione uma linha!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
 
    }//GEN-LAST:event_btnReprovarActionPerformed

    private void lblClickMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClickMouseClicked
        Usuario user = buscarUsuarioPorCPF(cpfGerente);
            
        int resposta = JOptionPane.showConfirmDialog(
            this,
            "Deseja realmente finalizar a sua sessão com " + user.getNome() + "?",
            "Finalizar Sessão",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (resposta == JOptionPane.YES_OPTION) {
            Login login = new Login();
            login.setVisible(true);
            login.setLocationRelativeTo(null);
            
            this.dispose(); 
        } 
    }//GEN-LAST:event_lblClickMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<Map<String, Object>> pedidoSaque = ArquivoJson.lerPedidosSaque();
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Nome");
        model.addColumn("CPF");
        model.addColumn("Valor");
        
        
        for (Map<String, Object> pedido : pedidoSaque) {
            String nome = (String) pedido.get("nome");
            String cpf = (String) pedido.get("cpf");
            double valor = (double) pedido.get("valor");
            model.addRow(new Object[]{nome, cpf, valor});
        }

        tbTabelaSaque.setModel(model);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = tbTabelaSaque.getSelectedRow();

        // Verifica se há uma linha selecionada
        if (selectedRow != -1) {
            // Pega os valores da linha selecionada
          
            String cpf = (String) tbTabelaSaque.getValueAt(selectedRow, 1);  // CPF está na coluna 1
            double valor = (double) tbTabelaSaque.getValueAt(selectedRow, 2); // Valor está na coluna 2

            // Aqui você pode chamar o método para realizar a transferência
            Usuario usuario = buscarUsuarioPorCPF(cpf);
            
            saque(usuario, valor);
           
            removerPedidoSaque(cpf, valor);
            
            JOptionPane.showMessageDialog(this, "Saque Liberado!", "Liberado!", JOptionPane.INFORMATION_MESSAGE);
            atualizarTabela2();
            
        } else {
            // Caso não tenha linha selecionada
            JOptionPane.showMessageDialog(this, "Por favor, selecione uma linha!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbTabelaSaqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTabelaSaqueMouseClicked
        if (evt.getClickCount() == 2) {
            evt.consume(); // Impede a ação do duplo clique
}
    }//GEN-LAST:event_tbTabelaSaqueMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuGerente user = new MenuGerente();
                user.setVisible(true);
                user.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu MenuCadastros;
    private javax.swing.JMenu MenuInvestimentos;
    private javax.swing.JPanel Painel;
    private javax.swing.JButton btnAprovar;
    private javax.swing.JButton btnReprovar;
    private javax.swing.JButton btnVerificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblClick;
    private javax.swing.JLabel lblGerente;
    private javax.swing.JLabel lblLogoBanco;
    private javax.swing.JLabel lblNomeGerente;
    private javax.swing.JLabel lblTituloPequeno;
    private javax.swing.JLabel lblTituloPequeno1;
    private javax.swing.JTable tbTabelaCredito;
    private javax.swing.JTable tbTabelaSaque;
    // End of variables declaration//GEN-END:variables
 
}
